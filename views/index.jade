doctype

- if (typeof code == 'undefined') {code = ''}
- if (typeof result == 'undefined') {result = ''}

head
  script(src='https://ajax.googleapis.com/ajax/libs/jquery/1.8.1/jquery.min.js', type='text/javascript')
  script
    function updateResult(event) {
      var result;

      try {
        result = JSON.stringify(eval(event.target.value));
        if (typeof result != 'undefined') {
          $('div#live_result pre').replaceWith('<pre>' + result + '</pre>');
          $('div#live_errors pre').replaceWith('<pre></pre>');
        }
      }
      catch (err) {
        $('div#live_errors pre').replaceWith('<pre>' + err + '</pre>');
      }
    }

    $(document).ready(function () {
      var textField = $('#code textarea');

      textField.keyup(updateResult);
    });
body
  | <a href="https://github.com/tehgeekmeister/wepl"><img style="position: absolute; top: 0; right: 0; border: 0;" src="https://s3.amazonaws.com/github/ribbons/forkme_right_darkblue_121621.png" alt="Fork me on GitHub"></a>
  div#input
    h4 new code
    form#code(action='/')
      div
        textarea(cols=100, rows=30, name='methodBody')= code
      div
        button(type='submit') upload your code
  div#explanation
    h4 explanation
    p
      :markdown
        you can put in whatever code you want here.  it'll run, and show you the results.  the tricky bit is that it runs inside of [node.js](http://nodejs.org) (with [express.js](http://expressjs.com) loaded).  in other words, this code doesn't run on your computer.  it runs on a server off in the metaphorical cloud.
    p
      :markdown
        this means you can actually program what various URLs on this site do.  the other side of this, however, is that things like `document.write`, `alert`, and other things that use the [DOM](http://en.wikipedia.org/wiki/Document_Object_Model), won't work in here.
    p
      :markdown
        it's a tradeoff, and i think i made the right choice.  there's no other place you can play around with server side code on the web, that i'm aware of.  (also, if you're careful, you can play around with client side javascript here.  can you figure it out?)
  div#old_code
    h4 old code
    pre= code
  div#result
    h4 result
    pre= result
  div#live_result
    h4 live result
    pre
  div#live_errors
    h4 live errors
    pre
